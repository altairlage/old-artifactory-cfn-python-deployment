{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deployment of Artifactory server and SG",
    "Parameters": {
        "InstanceAMI": {
            "Description": "ami for Image",
            "Type": "String",
            "Default": "ami for Image"
        },
        "KeyName": {
            "Description": "Name of Keypair to enable ssh access",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of VPC for the IGW",
            "Type": "String",
            "Default": "ID of VPC for the IGW"
        },
        "SubnetID": {
            "Description": "SUBNET the Artifactory server will live in",
            "Type": "String",
            "Default": "SUBNET the Artifactory server will live in"
        },
        "EC2Name": {
            "Description": "Name of instance",
            "Type": "String",
            "Default": "Name of Instance"
        },
        "ec2accesslocation": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": "The IP address range that can be used to connect to the EC2 instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "ec2accesslocation2": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": "The IP address range that can be used to connect to the EC2 instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        }
    },
    "Resources": {
        "ARTIFACTORYSG": {
            "Properties": {
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "ec2accesslocation"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "ec2accesslocation2"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "ec2accesslocation"
                        },
                        "FromPort": "8081",
                        "IpProtocol": "tcp",
                        "ToPort": "8081"
                    },
                    {
                        "CidrIp": {
                            "Ref": "ec2accesslocation2"
                        },
                        "FromPort": "8081",
                        "IpProtocol": "tcp",
                        "ToPort": "8081"
                    }
                ],
                "VpcId": {
                    "Ref": "VPCID"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "ARTIFACTORY": {
            "Properties": {
                "ImageId": {
                    "Ref": "InstanceAMI"
                },
                "InstanceType": "m4.4xlarge",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeSize": "100"
                        }
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "ARTIFACTORYSG",
                            "GroupId"
                        ]
                    }
                ],
                "SubnetId": {
                    "Ref": "SubnetID"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "EC2Name"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "/usr/bin/easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz> /tmp/apt-ARTIFACTORY.log 2>&1\n",
                                "## Install Java\n",
                                "yum install -y java-1.8.0-openjdk> /tmp/apt-ARTIFACTORY.log 2>&1\n",
                                "## Install GIT\n",
                                "yum install -y git> /tmp/apt-ARTIFACTORY.log 2>&1\n",
                                "## ARTIFACTORY setup\n",
                                "wget -O /etc/yum.repos.d/bintray-jfrog-artifactory-pro-rpms.repo https://bintray.com/jfrog/artifactory-pro-rpms/rpm\n",
                                "yum -y install jfrog-artifactory-pro-5.3.2> /tmp/apt-ARTIFACTORY.log 2>&1\n",
                                "sed -i 's/-server -Xms512m -Xmx2g/-server -Xms2g -Xmx8g/g' /etc/opt/jfrog/artifactory/default\n",
                                "systemctl restart artifactory\n",
                                "# Send signal to WaitHandle that the setup is completed\n",
                                "/usr/bin/cfn-signal",
                                " -e 0",
                                " '",
                                {
                                    "Ref": "WaitHandle"
                                },
                                "'",
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        }
    }
}
