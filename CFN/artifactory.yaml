AWSTemplateFormatVersion: '2010-09-09'
Description: Deployment of Artifactory server and SG
Parameters:
  InstanceAMI:
    Description: " ID for AMI"
    Type: String
  KeyName:
    Description: "Name of EC2 Keypair"
    Type: String
  VPCID:
    Description: "VPC ID"
    Type: String
  SubnetID:
    Description: "ID of the subnet for Artifactory server will live in"
    Type: String
  EC2Name:
    Description: "Name of Instance"
    Type: String
  ec2accesslocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: "The IP address range that can be used to connect to the EC2 instances"
    MaxLength: '18'
    MinLength: '9'
    Type: String
  ec2accesslocation2:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: "The IP address range that can be used to connect to the EC2 instances"
    MaxLength: '18'
    MinLength: '9'
    Type: String
Resources:
  ARTIFACTORYSG:
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - CidrIp: !Ref 'ec2accesslocation'
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'
        - CidrIp: !Ref 'ec2accesslocation2'
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'
        - CidrIp: !Ref 'ec2accesslocation'
          FromPort: '8081'
          IpProtocol: tcp
          ToPort: '8081'
        - CidrIp: !Ref 'ec2accesslocation2'
          FromPort: '8081'
          IpProtocol: tcp
          ToPort: '8081'
      VpcId: !Ref 'VPCID'
    Type: AWS::EC2::SecurityGroup
  #WaitHandle:
  #  Type: AWS::CloudFormation::WaitConditionHandle
  #WaitCondition:
  #  Type: AWS::CloudFormation::WaitCondition
  #  DependsOn: ARTIFACTORY
  #  Properties:
  #    Handle: !Ref 'WaitHandle'
  #    Timeout: '1200'
  ARTIFACTORY:
    Properties:
      ImageId: !Ref 'InstanceAMI'
      InstanceType: m4.large
      KeyName: !Ref 'KeyName'
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: '100'
      SecurityGroupIds:
        - !GetAtt 'ARTIFACTORYSG.GroupId'
      SubnetId: !Ref 'SubnetID'
      Tags:
        - Key: Name
          Value: !Ref 'EC2Name'
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash
          /usr/bin/easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz> /tmp/apt-ARTIFACTORY.log 2>&1
          ## Install Java
          yum install -y java-1.8.0-openjdk> /tmp/apt-ARTIFACTORY.log 2>&1
          ## Install GIT
          yum install -y git> /tmp/apt-ARTIFACTORY.log 2>&1
          ## Install WGET
          yum install -y wget> /tmp/apt-ARTIFACTORY.log 2>&1
          ## ARTIFACTORY setup
          wget -O /etc/yum.repos.d/bintray-jfrog-artifactory-pro-rpms.repo https://bintray.com/jfrog/artifactory-pro-rpms/rpm
          yum -y install jfrog-artifactory-pro-5.3.2> /tmp/apt-ARTIFACTORY.log 2>&1
          sed -i 's/-server -Xms512m -Xmx2g/-server -Xms2g -Xmx8g/g' /etc/opt/jfrog/artifactory/default
          service artifactory start
          # Send signal to WaitHandle that the setup is completed
    Type: AWS::EC2::Instance
